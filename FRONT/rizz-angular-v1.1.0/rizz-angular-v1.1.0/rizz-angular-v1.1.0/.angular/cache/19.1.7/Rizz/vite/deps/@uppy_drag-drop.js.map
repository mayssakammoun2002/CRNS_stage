{
  "version": 3,
  "sources": ["../../../../../../node_modules/@uppy/drag-drop/lib/locale.js", "../../../../../../node_modules/@uppy/drag-drop/lib/DragDrop.js"],
  "sourcesContent": ["export default {\n  strings: {\n    // Text to show on the droppable area.\n    // `%{browse}` is replaced with a link that opens the system file selection dialog.\n    dropHereOr: 'Drop here or %{browse}',\n    // Used as the label for the link that opens the system file selection dialog.\n    browse: 'browse'\n  }\n};", "import { UIPlugin } from '@uppy/core';\nimport toArray from '@uppy/utils/lib/toArray';\nimport isDragDropSupported from '@uppy/utils/lib/isDragDropSupported';\nimport getDroppedFiles from '@uppy/utils/lib/getDroppedFiles';\nimport { h } from 'preact';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore We don't want TS to generate types for the package.json\nconst packageJson = {\n  \"version\": \"3.1.0\"\n};\nimport locale from \"./locale.js\";\n// Default options, must be kept in sync with @uppy/react/src/DragDrop.js.\nconst defaultOptions = {\n  inputName: 'files[]',\n  width: '100%',\n  height: '100%'\n};\n\n/**\n * Drag & Drop plugin\n *\n */\nexport default class DragDrop extends UIPlugin {\n  constructor(uppy, opts) {\n    super(uppy, {\n      ...defaultOptions,\n      ...opts\n    });\n    // Check for browser dragDrop support\n    this.isDragDropSupported = isDragDropSupported();\n    this.addFiles = files => {\n      const descriptors = files.map(file => ({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file,\n        meta: {\n          // path of the file relative to the ancestor directory the user selected.\n          // e.g. 'docs/Old Prague/airbnb.pdf'\n          relativePath: file.relativePath || null\n        }\n      }));\n      try {\n        this.uppy.addFiles(descriptors);\n      } catch (err) {\n        this.uppy.log(err);\n      }\n    };\n    this.onInputChange = event => {\n      const files = toArray(event.target.files);\n      if (files.length > 0) {\n        this.uppy.log('[DragDrop] Files selected through input');\n        this.addFiles(files);\n      }\n\n      // We clear the input after a file is selected, because otherwise\n      // change event is not fired in Chrome and Safari when a file\n      // with the same name is selected.\n      // ___Why not use value=\"\" on <input/> instead?\n      //    Because if we use that method of clearing the input,\n      //    Chrome will not trigger change if we drop the same file twice (Issue #768).\n      // @ts-expect-error TS freaks out, but this is fine\n      // eslint-disable-next-line no-param-reassign\n      event.target.value = null;\n    };\n    this.handleDragOver = event => {\n      var _this$opts$onDragOver, _this$opts;\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Check if the \"type\" of the datatransfer object includes files. If not, deny drop.\n      const {\n        types\n      } = event.dataTransfer;\n      const hasFiles = types.some(type => type === 'Files');\n      const {\n        allowNewUpload\n      } = this.uppy.getState();\n      if (!hasFiles || !allowNewUpload) {\n        // eslint-disable-next-line no-param-reassign\n        event.dataTransfer.dropEffect = 'none';\n        clearTimeout(this.removeDragOverClassTimeout);\n        return;\n      }\n\n      // Add a small (+) icon on drop\n      // (and prevent browsers from interpreting this as files being _moved_ into the browser\n      // https://github.com/transloadit/uppy/issues/1978)\n      //\n      // eslint-disable-next-line no-param-reassign\n      event.dataTransfer.dropEffect = 'copy';\n      clearTimeout(this.removeDragOverClassTimeout);\n      this.setPluginState({\n        isDraggingOver: true\n      });\n      (_this$opts$onDragOver = (_this$opts = this.opts).onDragOver) == null || _this$opts$onDragOver.call(_this$opts, event);\n    };\n    this.handleDragLeave = event => {\n      var _this$opts$onDragLeav, _this$opts2;\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this.removeDragOverClassTimeout);\n      // Timeout against flickering, this solution is taken from drag-drop library.\n      // Solution with 'pointer-events: none' didn't work across browsers.\n      this.removeDragOverClassTimeout = setTimeout(() => {\n        this.setPluginState({\n          isDraggingOver: false\n        });\n      }, 50);\n      (_this$opts$onDragLeav = (_this$opts2 = this.opts).onDragLeave) == null || _this$opts$onDragLeav.call(_this$opts2, event);\n    };\n    this.handleDrop = async event => {\n      var _this$opts$onDrop, _this$opts3;\n      event.preventDefault();\n      event.stopPropagation();\n      clearTimeout(this.removeDragOverClassTimeout);\n\n      // Remove dragover class\n      this.setPluginState({\n        isDraggingOver: false\n      });\n      const logDropError = error => {\n        this.uppy.log(error, 'error');\n      };\n\n      // Add all dropped files\n      const files = await getDroppedFiles(event.dataTransfer, {\n        logDropError\n      });\n      if (files.length > 0) {\n        this.uppy.log('[DragDrop] Files dropped');\n        this.addFiles(files);\n      }\n      (_this$opts$onDrop = (_this$opts3 = this.opts).onDrop) == null || _this$opts$onDrop.call(_this$opts3, event);\n    };\n    this.type = 'acquirer';\n    this.id = this.opts.id || 'DragDrop';\n    this.title = 'Drag & Drop';\n    this.defaultLocale = locale;\n    this.i18nInit();\n  }\n  renderHiddenFileInput() {\n    const {\n      restrictions\n    } = this.uppy.opts;\n    return h(\"input\", {\n      className: \"uppy-DragDrop-input\",\n      type: \"file\",\n      hidden: true,\n      ref: ref => {\n        this.fileInputRef = ref;\n      },\n      name: this.opts.inputName,\n      multiple: restrictions.maxNumberOfFiles !== 1\n      // @ts-expect-error We actually want to coerce the array to a string (or keep it as null/undefined)\n      ,\n\n      accept: restrictions.allowedFileTypes,\n      onChange: this.onInputChange\n    });\n  }\n  static renderArrowSvg() {\n    return h(\"svg\", {\n      \"aria-hidden\": \"true\",\n      focusable: \"false\",\n      className: \"uppy-c-icon uppy-DragDrop-arrow\",\n      width: \"16\",\n      height: \"16\",\n      viewBox: \"0 0 16 16\"\n    }, h(\"path\", {\n      d: \"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\",\n      fillRule: \"evenodd\"\n    }));\n  }\n  renderLabel() {\n    return h(\"div\", {\n      className: \"uppy-DragDrop-label\"\n    }, this.i18nArray('dropHereOr', {\n      browse: h(\"span\", {\n        className: \"uppy-DragDrop-browse\"\n      }, this.i18n('browse'))\n    }));\n  }\n  renderNote() {\n    return h(\"span\", {\n      className: \"uppy-DragDrop-note\"\n    }, this.opts.note);\n  }\n  render() {\n    const dragDropClass = `uppy-u-reset\n      uppy-DragDrop-container\n      ${this.isDragDropSupported ? 'uppy-DragDrop--isDragDropSupported' : ''}\n      ${this.getPluginState().isDraggingOver ? 'uppy-DragDrop--isDraggingOver' : ''}\n    `;\n    const dragDropStyle = {\n      width: this.opts.width,\n      height: this.opts.height\n    };\n    return h(\"button\", {\n      type: \"button\",\n      className: dragDropClass,\n      style: dragDropStyle,\n      onClick: () => this.fileInputRef.click(),\n      onDragOver: this.handleDragOver,\n      onDragLeave: this.handleDragLeave,\n      onDrop: this.handleDrop\n    }, this.renderHiddenFileInput(), h(\"div\", {\n      className: \"uppy-DragDrop-inner\"\n    }, DragDrop.renderArrowSvg(), this.renderLabel(), this.renderNote()));\n  }\n  install() {\n    const {\n      target\n    } = this.opts;\n    this.setPluginState({\n      isDraggingOver: false\n    });\n    if (target) {\n      this.mount(target, this);\n    }\n  }\n  uninstall() {\n    this.unmount();\n  }\n}\nDragDrop.VERSION = packageJson.version;"],
  "mappings": "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",
  "names": []
}
